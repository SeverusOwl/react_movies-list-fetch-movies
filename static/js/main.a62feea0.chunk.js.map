{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","getMovies","a","fetch","response","ok","Promise","reject","TypeError","json","FindMovie","props","onUpdateMovies","useState","querty","setQuerty","setMovie","showError","setError","loader","setLoader","moviesFromServer","findMovie","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","find","m","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","state","data","selectedMovie","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a62feea0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=90c672b7&t=';\n\nexport const getMovies = async (title: string): Promise<MovieFromServer> => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  if (!response.ok) {\n    return Promise.reject(new TypeError('Error'));\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovies } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[]\n  onUpdateMovies: (selectedMovie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { movies, onUpdateMovies } = props;\n\n  const [querty, setQuerty] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [showError, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const moviesFromServer = async () => {\n    setLoader(true);\n    const findMovie = await getMovies(querty);\n\n    if (findMovie.Response !== 'False') {\n      setMovie({\n        title: findMovie.Title,\n        description: findMovie.Plot,\n        imgUrl: findMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${findMovie.imdbID}/`,\n        imdbId: findMovie.imdbID,\n      });\n    } else {\n      setError(true);\n      setMovie(null);\n    }\n\n    setLoader(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (movie !== null && !movies.find(m => m.imdbId === movie.imdbId)) {\n      onUpdateMovies(movie);\n    }\n\n    setQuerty('');\n    setMovie(null);\n    setError(false);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuerty(event.target.value);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': showError })}\n              value={querty}\n              onChange={handleInput}\n            />\n          </div>\n\n          {showError && (\n            <p className={classNames('help', { 'is-danger': showError })}>\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames('button is-light', loader && 'is-loading')}\n              onClick={moviesFromServer}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie ? <MovieCard {...movie} /> : <div>no selected</div>}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: data,\n  };\n\n  onUpdateMovies = (selectedMovie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, selectedMovie],\n    }) as Pick<State, keyof State>);\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie movies={movies} onUpdateMovies={this.onUpdateMovies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}